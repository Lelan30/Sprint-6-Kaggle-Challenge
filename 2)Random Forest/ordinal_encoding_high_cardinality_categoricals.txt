
#data with large number of classes is said to have high cadinality

import numpy as np
import pandas as pd

#Create DataFrame
df = pd.DataFrame({
    'color':["a", "c", "a", "a", "b", "b", "d", "d", "c"],
    'outcome':[1, 2, 0, 0, 1, 1, 3, 3, 2]})

#set up X and y
X = df.drop('outcome', axis = 1)
y = df.drop('color', axis = 1)

#Label encoding
from sklearn.preprocessing import LabelEncoder

label_enc = LabelEncoder()
encoded = label_enc.fit_transform(np.ravel(X))

print('\n The result of transforming X with LabelEncoder:')
print(encoded)
print(type(encoded))

#Ordinal encoding
from sklearn.preprocessing import OrdinalEncoder

ordinal_enc = OrdinalEncoder()
ordinal_enc.fit_transform(X, y['outcome'])